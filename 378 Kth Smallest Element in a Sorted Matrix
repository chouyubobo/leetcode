class Solution {
public:
    int kthSmallest(vector<vector<int>>& matrix, int k) {
        vector<int>vec;
        for(int i=0;i<matrix.size();i++){
            for(int j=0;j<matrix[i].size();j++){
                vec.push_back(matrix[i][j]);
            }
        }
        make_heap(vec.begin(),vec.end(),cmp);
        int cnt;
        if(k==1){
            return vec[0];
        }else{
            cnt=k-1;
        }
        while(cnt--){
            pop_heap(vec.begin(),vec.end(),cmp);
            vec.pop_back();
        }
        pop_heap(vec.begin(),vec.end(),cmp);
        return vec[vec.size()-1];
    }
    static bool cmp(int a,int b){//小根堆
        return a>b?true:false;
    }
};
