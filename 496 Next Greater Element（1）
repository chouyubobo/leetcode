class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {
        vector<int>ans;
        stack<int>s;
        unordered_map<int,int>m;
        for(int n:nums){//<key,value>  key：组二中每个元素（若存在较大元素）;value：组二中每个元素右边第一个较大元素
            while(!s.empty()&&s.top()<n){
                m[s.top()]=n;
                s.pop();
            }
            s.push(n);
        }
        //用两层循环也可以完成上面的功能，但复杂度明显更大
        /*for(int i=0;i<nums.size();i++){
            bool flag=false;
            for(int j=i+1;j<nums.size();j++){
                if(nums[j]>nums[i]&&!flag){
                    m[nums[i]]=nums[j];
                    flag=true;
                }
            }
        }*/
        for(int n:findNums){
            ans.push_back(m.count(n)?m[n]:-1);
        }
        return ans;
    }
};
 
